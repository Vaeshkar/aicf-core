const express = require('express');
const { body, validationResult } = require('express-validator');
const fs = require('fs');
const path = require('path');

const router = express.Router();
const todosFilePath = path.join(__dirname, '../data/todos.json');

// Helper function to read todos from file
const readTodos = () => {
  try {
    const data = fs.readFileSync(todosFilePath, 'utf8');
    return JSON.parse(data);
  } catch (err) {
    return [];
  }
};

// Helper function to write todos to file
const writeTodos = (todos) => {
  fs.writeFileSync(todosFilePath, JSON.stringify(todos, null, 2), 'utf8');
};

// Get all todos
router.get('/', (req, res) => {
  const todos = readTodos();
  res.json(todos);
});

// Add a new todo
router.post(
  '/',
  body('text').notEmpty().withMessage('Text is required'),
  (req, res) => {
    const errors = validationResult(req);
    if (!errors.isEmpty()) {
      return res.status(400).json({ errors: errors.array() });
    }

    const todos = readTodos();
    const newTodo = {
      id: Date.now(),
      text: req.body.text,
      completed: false
    };
    todos.push(newTodo);
    writeTodos(todos);
    res.status(201).json(newTodo);
  }
);

// Toggle a todo
router.put('/:id', (req, res) => {
  const todos = readTodos();
  const todo = todos.find((t) => t.id === parseInt(req.params.id, 10));

  if (!todo) {
    return res.status(404).json({ message: 'Todo not found' });
  }

  todo.completed = !todo.completed;
  writeTodos(todos);
  res.json(todo);
});

// Delete a todo
router.delete('/:id', (req, res) => {
  const todos = readTodos();
  const index = todos.findIndex((t) => t.id === parseInt(req.params.id, 10));

  if (index === -1) {
    return res.status(404).json({ message: 'Todo not found' });
  }

  todos.splice(index, 1);
  writeTodos(todos);
  res.status(200).json({ message: 'Todo deleted' });
});

module.exports = router;