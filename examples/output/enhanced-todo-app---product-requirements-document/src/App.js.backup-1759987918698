import React, { useState, useEffect } from 'react';
import TodoForm from './components/TodoForm';
import TodoList from './components/TodoList';
import useTodos from './hooks/useTodos';

function App() {
  const [todos, setTodos] = useState([]);
  const { fetchTodos, addTodo, updateTodo, deleteTodo } = useTodos();

  useEffect(() => {
    fetchTodos().then(setTodos);
  }, []);

  const handleAddTodo = async (newTodo) => {
    const addedTodo = await addTodo(newTodo);
    setTodos([...todos, addedTodo]);
  };

  const handleToggleTodo = async (id) => {
    const updatedTodo = await updateTodo(id, { completed: !todos.find(todo => todo.id === id).completed });
    setTodos(todos.map(todo => (todo.id === id ? updatedTodo : todo)));
  };

  const handleDeleteTodo = async (id) => {
    await deleteTodo(id);
    setTodos(todos.filter(todo => todo.id !== id));
  };

  const handleEditTodo = async (id, text) => {
    const updatedTodo = await updateTodo(id, { text });
    setTodos(todos.map(todo => (todo.id === id ? updatedTodo : todo)));
  };

  return (
    <div className="flex flex-col items-center justify-center min-h-screen bg-white dark:bg-gray-900">
      <header className="w-full p-4 bg-white dark:bg-gray-900 shadow-lg">
        <div className="flex justify-between items-center">
          <h1 className="text-2xl font-bold text-gray-900 dark:text-white">TaskMaster Pro</h1>
          <button className="text-gray-500 hover:text-gray-700 dark:hover:text-gray-300" onClick={() => document.documentElement.classList.toggle('dark')}>Toggle Theme</button>
        </div>
      </header>
      <main className="flex flex-col items-center w-full max-w-2xl p-4 mt-4 bg-white dark:bg-gray-800 rounded-lg shadow-lg">
        <TodoForm onAddTodo={handleAddTodo} />
        <TodoList todos={todos} onToggleTodo={handleToggleTodo} onDeleteTodo={handleDeleteTodo} onEditTodo={handleEditTodo} />
      </main>
      <footer className="w-full p-4 text-center text-gray-500 dark:text-gray-400">
        <p>{todos.filter(todo => !todo.completed).length} items remaining</p>
      </footer>
    </div>
  );
}

export default App;